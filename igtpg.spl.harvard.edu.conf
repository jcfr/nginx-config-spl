
# This file is managed remotely, all changes will be lost

# nginx server configuration for:
#    - https://igtpg.spl.harvard.edu/

# Support for redirection via DNS suffixes in /etc/resolv.conf

server {
        listen 80;
        listen [::]:80;

#        server_name igtpg.qualitybox.us igtpg.spl.harvard.edu; # 2023.07.06 (jcfr)
        server_name igtpg.spl.harvard.edu;

        root /var/www/clients/igtpg.spl.harvard.edu;

        include snippets/acme-challenge.conf;

        location / {
                return 301 https://$host$request_uri;
        }

}

server {
        listen 443 ssl;
        listen [::]:443 ssl http2;

        ssl_certificate           /etc/letsencrypt/live/wiki.slicer.org/fullchain.pem;
        ssl_certificate_key       /etc/letsencrypt/live/wiki.slicer.org/privkey.pem;

        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers               "EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA256:EECDH:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!IDEA:!ECDSA:kEDH"; # TLS cipher suites set: bettercrypto_org__set_b_pfs
        ssl_dhparam               /etc/pki/dhparam/set0;
        ssl_ecdh_curve            secp384r1;
        ssl_stapling              on;
        ssl_stapling_verify       on;
        ssl_trusted_certificate   /etc/pki/realms/domain/trusted.crt;
        resolver                  8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout          5s;
        add_header                Strict-Transport-Security "max-age=15768000; includeSubDomains";
        add_header                X-Content-Type-Options "nosniff" always;
        add_header                X-Frame-Options "SAMEORIGIN" always;
        add_header                X-XSS-Protection "1; mode=block";
        add_header                Referrer-Policy "same-origin";

#        server_name igtpg.qualitybox.us igtpg.spl.harvard.edu; # 2023.07.06 (jcfr)
        server_name igtpg.spl.harvard.edu;

        root /var/www/clients/igtpg.spl.harvard.edu;

        include snippets/acme-challenge.conf;

        keepalive_timeout 60;

        access_log /var/log/nginx/igtpg.spl.harvard.edu_access.log;
        error_log /var/log/nginx/igtpg.spl.harvard.edu_error.log;
        index index.html index.htm index.php;

        if (-f $document_root/maintenance.html) {
                return 503;
        }
        error_page 503 @maintenance;
        location @maintenance {
                rewrite ^(.*)$ /maintenance.html break;
        }

        # Disallow access to hidden files and directories, except `/.well-known/`
        # https://www.mnot.net/blog/2010/04/07/well-known
        # https://tools.ietf.org/html/rfc5785
        location ~ /\.(?!well-known/) {
                return 404;
        }



        location = /nginx_status {
                stub_status on;
                access_log off;
                allow 127.0.0.1/32;
                allow ::1/128;
                allow 67.205.190.17;
                allow 10.10.0.11;
                allow 10.136.225.163;
                deny all;
        }


        location ~ ^(?!.+\.php/)(?<script_name>.+\.php)$ {
                try_files $script_name =404;

                include fastcgi.conf;

                # Mitigate HTTPOXY attacks (https://httpoxy.org/)
                fastcgi_param HTTP_PROXY "";

                fastcgi_index index.php;
                fastcgi_pass php5_www-data;
        }

        location ~ ^(?<script_name>.+\.php)(?<path_info>/.*)$ {
                try_files $script_name =404;

                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$script_name;
                fastcgi_param PATH_INFO $path_info;
                #fastcgi_param PATH_TRANSLATED $document_root$path_info;

                # Mitigate HTTPOXY attacks (https://httpoxy.org/)
                fastcgi_param HTTP_PROXY "";

                fastcgi_index index.php;
                fastcgi_pass php5_www-data;
        }

        #### All the following rules added for pretty URLs
        location ~ ^/w/(index|load|api|thumb|opensearch_desc)\.php$ {
		include /etc/nginx/fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_pass 127.0.0.1:9000; # or whatever port your PHP-FPM listens on
	}
	
	# Images
	location /w/images {
		# Separate location for images/ so .php execution won't apply
	}
	location /w/images/deleted {
		# Deny access to deleted images folder
		deny all;
	}
	# MediaWiki assets (usually images)
	location ~ ^/w/resources/(assets|lib|src) {
		try_files $uri 404;
		add_header Cache-Control "public";
		expires 7d;
	}
	# Assets, scripts and styles from skins and extensions
	location ~ ^/w/(skins|extensions)/.+\.(css|js|gif|jpg|jpeg|png|svg)$ {
		try_files $uri 404;
		add_header Cache-Control "public";
		expires 7d;
	}
	# Favicon
	location = /favicon.ico {
		alias /w/images/6/64/Favicon.ico;
		add_header Cache-Control "public";
		expires 7d;
                access_log off;
                log_not_found off;
	}
	
	## Uncomment the following code if you wish to use the installer/updater
	## installer/updater
	#location /w/mw-config/ {
	#	# Do this inside of a location so it can be negated
	#	location ~ \.php$ {
	#		include /etc/nginx/fastcgi_params;
	#		fastcgi_param SCRIPT_FILENAME $document_root/w/mw-config/$fastcgi_script_name;
	#		fastcgi_pass 127.0.0.1:9000; # or whatever port your PHP-FPM listens on
	#	}
	#}
	
	# Handling for the article path (pretty URLs)
	location /wiki/ {
		rewrite ^/wiki/(?<pagename>.*)$ /w/index.php;
	}

	# Allow robots.txt in case you have one
	location = /robots.txt {
	}
	# Explicit access to the root website, redirect to main page (adapt as needed)
	location = / {
		return 301 /wiki/Main_Page;
	}

	# Every other entry point will be disallowed.
	# Add specific rules for other entry points/images as needed above this
	location / {
		return 404;
	}
        #### All the above rules added for pretty URLs
	client_max_body_size 500m;

}
