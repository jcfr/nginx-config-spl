
# This file is managed remotely, all changes will be lost

# nginx server configuration for:
#    - https://wiki.slicer.org/

upstream netdata {
    server 127.0.0.1:19999;
    keepalive 64;
}


server {
	listen 80;
	listen [::]:80;
#	server_name slicer.org www.slicer.org wiki.slicer.org slicer.qualitybox.us; # 2023.07.06 (jcfr)
	server_name slicer.org www.slicer.org wiki.slicer.org;
	root /var/www/clients/wiki.slicer.org;
	include snippets/acme-challenge.conf;
	location / {
	        return 301 https://www.slicer.org$request_uri;
	}
}

server {
	listen 443 ssl;
	listen [::]:443 ssl http2;
	ssl_certificate           /etc/letsencrypt/live/wiki.slicer.org/fullchain.pem;
	ssl_certificate_key       /etc/letsencrypt/live/wiki.slicer.org/privkey.pem;
	server_name slicer.org wiki.slicer.org;
	location / {
	        return 301 https://www.slicer.org$request_uri;
	}
}

server {
	listen 443 ssl; 
	listen [::]:443 ssl http2;

	ssl_certificate           /etc/letsencrypt/live/wiki.slicer.org/fullchain.pem;
	ssl_certificate_key       /etc/letsencrypt/live/wiki.slicer.org/privkey.pem;
	ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers               "EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA256:EECDH:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!IDEA:!ECDSA:kEDH"; # TLS cipher suites set: bettercrypto_org__set_b_pfs
	ssl_dhparam               /etc/pki/dhparam/set0;
	ssl_ecdh_curve            secp384r1;
	ssl_stapling              on;
	ssl_stapling_verify       on;
	ssl_trusted_certificate   /etc/pki/realms/domain/trusted.crt;
	resolver                  8.8.8.8 8.8.4.4 valid=300s;
	resolver_timeout          5s;
	add_header                Strict-Transport-Security "max-age=15768000; includeSubDomains";
	add_header                X-Content-Type-Options "nosniff" always;
	add_header                X-Frame-Options "SAMEORIGIN" always;
	add_header                X-XSS-Protection "1; mode=block";
	add_header                Referrer-Policy "same-origin";

	server_name www.slicer.org;

	root /var/www/clients/wiki.slicer.org;

	include snippets/acme-challenge.conf;

	keepalive_timeout 60;

	access_log /var/log/nginx/wiki.slicer.org_access.log;
	error_log /var/log/nginx/wiki.slicer.org_error.log;
	index index.html index.htm index.php;

	error_page 404 /404.html;
    location  /404.html {
    	internal;
	}

	if (-f $document_root/maintenance.html) {
		return 503;
	}
	error_page 503 @maintenance;
	location @maintenance {
		rewrite ^(.*)$ /maintenance.html break;
	}

	location .html {
	}

        location = /netdata {
                return 301 /netdata/;
        }

        location ~ /netdata/(?<ndpath>.*) {
                proxy_redirect off;
                proxy_set_header Host $host;

                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_http_version 1.1;
                proxy_pass_request_headers on;
                proxy_set_header Connection "keep-alive";
                proxy_store off;
                proxy_pass http://netdata/$ndpath$is_args$args;

                gzip on;
                gzip_proxied any;
                gzip_types *;
        }


	# Disallow access to hidden files and directories, except `/.well-known/`
	# https://www.mnot.net/blog/2010/04/07/well-known
	# https://tools.ietf.org/html/rfc5785
	location ~ /\.(?!well-known/) {
	        return 404;
	}

	#location = /favicon.ico {
	#        try_files /favicon.ico =204;
	#        access_log off;
	#        log_not_found off;
	#}

	location = /nginx_status {
		stub_status on;
		access_log off;
		allow 127.0.0.1/32;
		allow ::1/128;
		allow 73.159.7.52;
		allow 10.10.0.11;
		allow 10.136.225.163;
		deny all;
	}

 	location ~ ^/slicerWiki/(?:index.php/) {

		rewrite ^/?slicerWiki/index.php(.*)$ /w/index.php$1 redirect;

		# regex to split $uri to $fastcgi_script_name and $fastcgi_path
		fastcgi_split_path_info ^(.+?\.php)(/.*)$;

		# Check that the PHP script exists before passing it
		# try_files $fastcgi_script_name =404;

		# Bypass the fact that try_files resets $fastcgi_path_info
		# see: http://trac.nginx.org/nginx/ticket/321
		set $path_info $fastcgi_path_info;
		fastcgi_param PATH_INFO $path_info;

#		fastcgi_index index.php;
		include fastcgi.conf;
	}

	location ~ ^/?slicerWiki/images {
		rewrite ^/?slicerWiki/images(.*)$ /w/img_auth.php$1 permanent;
	}

	location ~ ^(?!.+\.php/)(?<script_name>.+\.php)$ {
		try_files $script_name =404;

		include fastcgi.conf;

		# Mitigate HTTPOXY attacks (https://httpoxy.org/)
		fastcgi_param HTTP_PROXY "";

		fastcgi_index index.php;
		fastcgi_pass php5_www-data;
	}

	location ~ ^(?<script_name>.+\.php)(?<path_info>/.*)$ {
		try_files $script_name =404;

		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$script_name;
		fastcgi_param PATH_INFO $path_info;
		#fastcgi_param PATH_TRANSLATED $document_root$path_info;

		# Mitigate HTTPOXY attacks (https://httpoxy.org/)
		fastcgi_param HTTP_PROXY "";

		fastcgi_index index.php;
		fastcgi_pass php5_www-data;
	}
	#### All the following rules added for pretty URLs
	location ~ ^/w/(index|load|api|thumb|opensearch_desc)\.php$ {
		include /etc/nginx/fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_pass 127.0.0.1:9000; # or whatever port your PHP-FPM listens on
	}

	# Images
	location /w/images {
		# Separate location for images/ so .php execution won't apply
	}
	location /w/images/deleted {
		# Deny access to deleted images folder
		deny all;
	}
	# MediaWiki assets (usually images)
	location ~ ^/w/resources/(assets|lib|src) {
		try_files $uri 404;
		add_header Cache-Control "public";
		expires 7d;
	}
	# Assets, scripts and styles from skins and extensions
	location ~ ^/w/(skins|extensions)/.+\.(css|js|gif|jpg|jpeg|png|svg)$ {
		try_files $uri 404;
		add_header Cache-Control "public";
		expires 7d;
	}
	# Favicon
	location = /favicon.ico {
		alias /w/images/6/64/Favicon.ico;
		add_header Cache-Control "public";
		expires 7d;
		access_log off;
		log_not_found off;
	}

	## Uncomment the following code if you wish to use the installer/updater
	## installer/updater
	#location /w/mw-config/ {
	#	# Do this inside of a location so it can be negated
	#	location ~ \.php$ {
	#		include /etc/nginx/fastcgi_params;
	#		fastcgi_param SCRIPT_FILENAME $document_root/w/mw-config/$fastcgi_script_name;
	#		fastcgi_pass 127.0.0.1:9000; # or whatever port your PHP-FPM listens on
	#	}
	#}

	# Handling for the article path (pretty URLs)
	location /wiki {
		fastcgi_split_path_info ^(/?wiki)(/.*)$;
		set $path_info $fastcgi_path_info;
		fastcgi_param PATH_INFO $path_info;
		include /etc/nginx/fastcgi_params;
		# article path should always be passed to index.php
		fastcgi_param SCRIPT_FILENAME    $document_root/w/index.php;
		fastcgi_pass php5_www-data;
	}


	# Allow robots.txt in case you have one
	location /robots.txt {
	}

	# The static HTML API docs are served offsite
	location ~ ^/doc {
		rewrite ^/doc(?:/)?(?:html)?(.*)$ http://apidocs.slicer.org/master$1 permanent;
	}

	# until we can definitively get rid of slicer3-downloads
	location ~ ^/slicer3-downloads {
		autoindex on;
		autoindex_exact_size off;
	}

	# Handle any links into the backend 'Publications' database
	# RewriteRule ^/?publications/pages/display(.+)$ http://www.spl.harvard.edu/publications/pages/display/?collection=11 [L,QSA]
	# Rewrite any link into 'gallery' over to the spl alternate
	# RewriteRule ^/?publications/gallery(.*) http://www.spl.harvard.edu/publications/gallery$1?collection=11 [L,QSA]

	location ~ ^/publications/gallery {
		rewrite ^/publications/gallery(.*) http://www.spl.harvard.edu/publications/gallery$1?collection=11 permanent;
	}

	location ~ ^/publications {
		rewrite ^/publications/pages/display(.+)$ http://www.spl.harvard.edu/publications/pages/display/?collection=11 permanent;
	}

	# # Handle specific content that references 'pages' from the old www site
	# RewriteRule ^/?pages/UserOrientation$ https://www.slicer.org/wiki/Documentation/UserOrientation [R,L]
	# RewriteRule ^/?pages/DeveloperOrientation$ https://www.slicer.org/wiki/Documentation/DeveloperOrientation [R,L]
	# RewriteRule ^/?pages/BugTrackerPortal$ https://www.slicer.org/wiki/Documentation/UserFeedback [R,L]
	# # Handle any remaining content that references 'pages' from the old www site
	# # RewriteRule ^/?pages/(.*)$ %{DOCUMENT_ROOT}/w/index.php/$1 [L]
	# RedirectMatch "^/?pages(.*)" "https://www.slicer.org/wiki$1"

	location ~ ^/pages {
		rewrite ^/pages/UserOrientation$ https://www.slicer.org/wiki/Documentation/UserOrientation break;
		rewrite ^/pages/DeveloperOrientation$ https://www.slicer.org/wiki/Documentation/DeveloperOrientation break;
		rewrite ^/pages/BugTrackerPortal$ https://www.slicer.org/wiki/Documentation/UserFeedback break;
		rewrite ^/?pages(.*) https://www.slicer.org/wiki$1 permanent;
	}

	#### All the above rules added for pretty URLs
	client_max_body_size 500m;
}
